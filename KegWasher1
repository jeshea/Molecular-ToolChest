/*
  Button

  Turns on and off a light emitting diode(LED) connected to digital pin 13,
  when pressing a pushbutton attached to pin 2.

  The circuit:
  - LED attached from pin 13 to ground
  - pushbutton attached to pin 2 from +5V
  - 10K resistor attached to pin 2 from ground

  - Note: on most Arduinos there is already an LED on the board
    attached to pin 13.

  created 2005
  by DojoDave <http://www.0j0.org>
  modified 30 Aug 2011
  by Tom Igoe

  This example code is in the public domain.

  http://www.arduino.cc/en/Tutorial/Button
*/

// constants won't change. They're used here to set pin numbers:
const int buttonPin1 = 11;     // the number of the pushbutton pin
const int buttonPin2 = 12;     // the number of the pushbutton pin
const int buttonPin3 = 13;     // the number of the pushbutton pin
const int ledPin1 =  8;      // the number of the LED pin
const int ledPin2 =  9;      // the number of the LED pin

const int RelayPin1 = 1;     // the number of the pushbutton pin
const int RelayPin2 = 2;     // the number of the pushbutton pin
const int RelayPin3 = 3;     // the number of the pushbutton pin
const int RelayPin4 = 4;     // the number of the pushbutton pin
const int RelayPin5 = 5;     // the number of the pushbutton pin
const int RelayPin6 = 6;     // the number of the pushbutton pin
const int RelayPin8 = 7;     // the number of the pushbutton pin
// variables will change:
int buttonState1 = 0;         // variable for reading the pushbutton status
int buttonState2 = 0;         // variable for reading the pushbutton status
int buttonState3 = 0;         // variable for reading the pushbutton status

bool RelayState1 = false;
bool RelayState2 = false;
bool RelayState3 = false;
bool RelayState4 = false;
bool RelayState5 = false;
bool RelayState6 = false;
bool RelayState8 = false;

const int debounceTime = 20; // debounce in milliseconds

void deBounce(bP){
  unsigned long now = millis();
  do
  {
    //on bounce, reset time-out
    if (digitalRead(bP) == LOW)
      now = millis();
  }
  while (digitalRead(bP) == LOW || (millis() - now) <= debounceTime);
}// end of debounce

void setup() {
  Serial.begin(9600);
  // initialize the LED pin as an output:
  pinMode(ledPin1, OUTPUT);
  pinMode(ledPin2, OUTPUT);
  pinMode(RelayPin1, OUTPUT);
  pinMode(RelayPin2, OUTPUT);
  pinMode(RelayPin3, OUTPUT);
  pinMode(RelayPin4, OUTPUT);
  pinMode(RelayPin5, OUTPUT);
  pinMode(RelayPin6, OUTPUT);
  pinMode(RelayPin8, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin1, INPUT);
  pinMode(buttonPin2, INPUT);
  pinMode(buttonPin3, INPUT);

  digitalWrite(RelayPin1, LOW);
  digitalWrite(RelayPin2, LOW);
  digitalWrite(RelayPin3, LOW);
  digitalWrite(RelayPin4, LOW);
  digitalWrite(RelayPin5, LOW);
  digitalWrite(RelayPin6, LOW);
  digitalWrite(RelayPin8, LOW);
}

void loop() {
  // read the state of the pushbutton value:
  buttonState1 = digitalRead(buttonPin1);
  buttonState2 = digitalRead(buttonPin2);
  buttonState3 = digitalRead(buttonPin3);
  Serial.print(buttonState1);
  Serial.print(RelayState1);
  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  if (buttonState1 == LOW) {
    // turn LED on:
    if (RelayState1 == true) {
      digitalWrite(RelayPin1,LOW);
      deBounce(RelayPin1);
      RelayState1 = false;
    }else {
      digitalWrite(RelayPin1, HIGH);
      RelayState1 = true;
    }
    
  }
}
